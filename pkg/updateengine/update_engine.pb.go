// Copyright 2019 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// proto file from: https://chromium.googlesource.com/chromiumos/platform2/+/master/system_api/dbus/update_engine/update_engine.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: pkg/updateengine/update_engine.proto

package updateengine

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Keep in sync with:
// update_engine/client_library/include/update_engine/update_status.h
type Operation int32

const (
	Operation_IDLE                      Operation = 0
	Operation_CHECKING_FOR_UPDATE       Operation = 1
	Operation_UPDATE_AVAILABLE          Operation = 2
	Operation_DOWNLOADING               Operation = 3
	Operation_VERIFYING                 Operation = 4
	Operation_FINALIZING                Operation = 5
	Operation_UPDATED_NEED_REBOOT       Operation = 6
	Operation_REPORTING_ERROR_EVENT     Operation = 7
	Operation_ATTEMPTING_ROLLBACK       Operation = 8
	Operation_DISABLED                  Operation = 9
	Operation_NEED_PERMISSION_TO_UPDATE Operation = 10
	// ERROR is only used by Chrome and update_engine doesn't really use/set this
	// value as it is not the proper way to propagate errors. DO NOT use this
	// anywhere other than Chrome.
	// TODO(crbug.com/977320): Remove this from Chrome.
	Operation_ERROR Operation = -1
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0:  "IDLE",
		1:  "CHECKING_FOR_UPDATE",
		2:  "UPDATE_AVAILABLE",
		3:  "DOWNLOADING",
		4:  "VERIFYING",
		5:  "FINALIZING",
		6:  "UPDATED_NEED_REBOOT",
		7:  "REPORTING_ERROR_EVENT",
		8:  "ATTEMPTING_ROLLBACK",
		9:  "DISABLED",
		10: "NEED_PERMISSION_TO_UPDATE",
		-1: "ERROR",
	}
	Operation_value = map[string]int32{
		"IDLE":                      0,
		"CHECKING_FOR_UPDATE":       1,
		"UPDATE_AVAILABLE":          2,
		"DOWNLOADING":               3,
		"VERIFYING":                 4,
		"FINALIZING":                5,
		"UPDATED_NEED_REBOOT":       6,
		"REPORTING_ERROR_EVENT":     7,
		"ATTEMPTING_ROLLBACK":       8,
		"DISABLED":                  9,
		"NEED_PERMISSION_TO_UPDATE": 10,
		"ERROR":                     -1,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_updateengine_update_engine_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_pkg_updateengine_update_engine_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_pkg_updateengine_update_engine_proto_rawDescGZIP(), []int{0}
}

// This is the message transferred between update_engine and other processes
// about the current status of the update_engine. It is used either in
// |GetUpdateStatusAdvanced| DBus method or |StatusUpdateAdvanced| signal.
//
// NOTE: Keep this updated with:
// update_engine/cient_library/include/update_engine/update_status.h
type StatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When the update_engine last checked for updates (time_t: seconds from Unix
	// epoch).
	LastCheckedTime int64 `protobuf:"varint,1,opt,name=last_checked_time,json=lastCheckedTime,proto3" json:"last_checked_time,omitempty"`
	// The current progress (0.0f-1.0f).
	Progress float64 `protobuf:"fixed64,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// The current status/operation of the update_engine.
	CurrentOperation Operation `protobuf:"varint,3,opt,name=current_operation,json=currentOperation,proto3,enum=update_engine.Operation" json:"current_operation,omitempty"`
	// The new product version.
	NewVersion string `protobuf:"bytes,4,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	// The size of the update payload (bytes).
	NewSize int64 `protobuf:"varint,5,opt,name=new_size,json=newSize,proto3" json:"new_size,omitempty"`
	// Whether the update is actually an enterprise rollback. The value is valid
	// only if the current_operation is passed |CHECKING_FOR_UPDATE|.
	IsEnterpriseRollback bool `protobuf:"varint,6,opt,name=is_enterprise_rollback,json=isEnterpriseRollback,proto3" json:"is_enterprise_rollback,omitempty"`
	// Indication of install for DLC(s).
	IsInstall bool `protobuf:"varint,7,opt,name=is_install,json=isInstall,proto3" json:"is_install,omitempty"`
	// The end-of-life date of the device in the number of days since Unix Epoch.
	EolDate int64 `protobuf:"varint,8,opt,name=eol_date,json=eolDate,proto3" json:"eol_date,omitempty"`
}

func (x *StatusResult) Reset() {
	*x = StatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_updateengine_update_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResult) ProtoMessage() {}

func (x *StatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_updateengine_update_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResult.ProtoReflect.Descriptor instead.
func (*StatusResult) Descriptor() ([]byte, []int) {
	return file_pkg_updateengine_update_engine_proto_rawDescGZIP(), []int{0}
}

func (x *StatusResult) GetLastCheckedTime() int64 {
	if x != nil {
		return x.LastCheckedTime
	}
	return 0
}

func (x *StatusResult) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *StatusResult) GetCurrentOperation() Operation {
	if x != nil {
		return x.CurrentOperation
	}
	return Operation_IDLE
}

func (x *StatusResult) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

func (x *StatusResult) GetNewSize() int64 {
	if x != nil {
		return x.NewSize
	}
	return 0
}

func (x *StatusResult) GetIsEnterpriseRollback() bool {
	if x != nil {
		return x.IsEnterpriseRollback
	}
	return false
}

func (x *StatusResult) GetIsInstall() bool {
	if x != nil {
		return x.IsInstall
	}
	return false
}

func (x *StatusResult) GetEolDate() int64 {
	if x != nil {
		return x.EolDate
	}
	return 0
}

var File_pkg_updateengine_update_engine_proto protoreflect.FileDescriptor

var file_pkg_updateengine_update_engine_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x45,
	0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6f, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x2a, 0x82, 0x02, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x57, 0x4e,
	0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4e, 0x41,
	0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10,
	0x06, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13,
	0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x42,
	0x41, 0x43, 0x4b, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x0a, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x42, 0x14, 0x48, 0x03, 0x5a, 0x10, 0x70, 0x6b, 0x67, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_updateengine_update_engine_proto_rawDescOnce sync.Once
	file_pkg_updateengine_update_engine_proto_rawDescData = file_pkg_updateengine_update_engine_proto_rawDesc
)

func file_pkg_updateengine_update_engine_proto_rawDescGZIP() []byte {
	file_pkg_updateengine_update_engine_proto_rawDescOnce.Do(func() {
		file_pkg_updateengine_update_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_updateengine_update_engine_proto_rawDescData)
	})
	return file_pkg_updateengine_update_engine_proto_rawDescData
}

var file_pkg_updateengine_update_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_updateengine_update_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_updateengine_update_engine_proto_goTypes = []interface{}{
	(Operation)(0),       // 0: update_engine.Operation
	(*StatusResult)(nil), // 1: update_engine.StatusResult
}
var file_pkg_updateengine_update_engine_proto_depIdxs = []int32{
	0, // 0: update_engine.StatusResult.current_operation:type_name -> update_engine.Operation
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_updateengine_update_engine_proto_init() }
func file_pkg_updateengine_update_engine_proto_init() {
	if File_pkg_updateengine_update_engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_updateengine_update_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_updateengine_update_engine_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_updateengine_update_engine_proto_goTypes,
		DependencyIndexes: file_pkg_updateengine_update_engine_proto_depIdxs,
		EnumInfos:         file_pkg_updateengine_update_engine_proto_enumTypes,
		MessageInfos:      file_pkg_updateengine_update_engine_proto_msgTypes,
	}.Build()
	File_pkg_updateengine_update_engine_proto = out.File
	file_pkg_updateengine_update_engine_proto_rawDesc = nil
	file_pkg_updateengine_update_engine_proto_goTypes = nil
	file_pkg_updateengine_update_engine_proto_depIdxs = nil
}
